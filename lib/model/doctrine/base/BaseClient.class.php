<?php

/**
 * BaseClient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $first_name
 * @property string $last_name
 * @property string $email_address
 * @property string $address
 * @property string $number
 * @property string $city
 * @property string $commune
 * @property string $username
 * @property string $password
 * @property integer $user_id
 * @property enum $user_type
 * @property Doctrine_Collection $sfGuardUser
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getFirstName()     Returns the current record's "first_name" value
 * @method string              getLastName()      Returns the current record's "last_name" value
 * @method string              getEmailAddress()  Returns the current record's "email_address" value
 * @method string              getAddress()       Returns the current record's "address" value
 * @method string              getNumber()        Returns the current record's "number" value
 * @method string              getCity()          Returns the current record's "city" value
 * @method string              getCommune()       Returns the current record's "commune" value
 * @method string              getUsername()      Returns the current record's "username" value
 * @method string              getPassword()      Returns the current record's "password" value
 * @method integer             getUserId()        Returns the current record's "user_id" value
 * @method enum                getUserType()      Returns the current record's "user_type" value
 * @method Doctrine_Collection getSfGuardUser()   Returns the current record's "sfGuardUser" collection
 * @method Client              setId()            Sets the current record's "id" value
 * @method Client              setFirstName()     Sets the current record's "first_name" value
 * @method Client              setLastName()      Sets the current record's "last_name" value
 * @method Client              setEmailAddress()  Sets the current record's "email_address" value
 * @method Client              setAddress()       Sets the current record's "address" value
 * @method Client              setNumber()        Sets the current record's "number" value
 * @method Client              setCity()          Sets the current record's "city" value
 * @method Client              setCommune()       Sets the current record's "commune" value
 * @method Client              setUsername()      Sets the current record's "username" value
 * @method Client              setPassword()      Sets the current record's "password" value
 * @method Client              setUserId()        Sets the current record's "user_id" value
 * @method Client              setUserType()      Sets the current record's "user_type" value
 * @method Client              setSfGuardUser()   Sets the current record's "sfGuardUser" collection
 * 
 * @package    Blog
 * @subpackage model
 * @author     Conates
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClient extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('client');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 8,
             ));
        $this->hasColumn('first_name', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('last_name', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('email_address', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('address', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('number', 'string', 8, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('city', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('commune', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('username', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('password', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('user_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Web',
              1 => 'Blog',
              2 => 'Web-Blog',
             ),
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}